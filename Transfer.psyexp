<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2021.1.4">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="ptb" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u&quot;/data/&quot; + os.sep + '%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'version': 'A', 'participant': ''}" valType="code"/>
    <Param name="Force stereo" updates="None" val="False" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="False" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="list"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="False" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="False" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="use prefs" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1440, 900]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[-1,-1,-1]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="transfer" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="data" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="test">
      <PatchComponent name="CStest">
        <Param name="borderColor" updates="constant" val="" valType="color"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="3" valType="code"/>
        <Param name="fillColor" updates="constant" val="" valType="color"/>
        <Param name="image" updates="set every repeat" val="$CS" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="none" valType="str"/>
        <Param name="name" updates="constant" val="CStest" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every frame" val="$tilt" valType="code"/>
        <Param name="phase" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sf" updates="constant" val="none" valType="code"/>
        <Param name="size" updates="constant" val="[1.5, 2]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$Duration" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="512" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PatchComponent>
      <CodeComponent name="checkKeys">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="pressL = 0.0;&amp;#10;pressR = 0.0;&amp;#10;logging.log({&quot;level&quot;: logging.DATA, &quot;msg&quot;: (&quot;start_&quot; + thisTrial[&quot;CS&quot;])});&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="pressL = 0.0&amp;#10;pressR = 0.0&amp;#10;logging.log(level=logging.DATA, msg = 'start_' + thisTrial['CS'] )&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if tilt &gt; 0:&amp;#10; tilt  = tilt-1&amp;#10;if tilt &lt; 0:&amp;#10; tilt = tilt+1&amp;#10;&amp;#10;if event.getKeys(['t']):&amp;#10; pressL = pressL+1&amp;#10; tilt = -15&amp;#10;&amp;#10;if event.getKeys(['v']):&amp;#10; pressR=pressR+1&amp;#10; tilt = 15&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="logging.log({&quot;level&quot;: logging.DATA, &quot;msg&quot;: (&quot;end_&quot; + thisTrial[&quot;CS&quot;])});&amp;#10;logging.flush();&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="logging.log(level=logging.DATA, msg = 'end_' + thisTrial['CS'])&amp;#10;logging.flush()" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="checkKeys" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="feedback">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="LightGray" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Helvetica Bold" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="      Thankyou!                                                                   &amp;#10;&amp;#10;Stage 3 completed" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instr">
      <CodeComponent name="init">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="tilt=0&amp;#10;pressL = 0.0&amp;#10;pressR = 0.0&amp;#10;logging.log(level=logging.DATA, msg = &quot;version &quot; + expInfo['version'])&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="tilt = 0;&amp;#10;pressL = 0.0;&amp;#10;pressR = 0.0;&amp;#10;logging.log({&quot;level&quot;: logging.DATA, &quot;msg&quot;: (&quot;version &quot; + expInfo[&quot;version&quot;])});&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="init" valType="code"/>
      </CodeComponent>
      <TextComponent name="test_trigger">
        <Param name="color" updates="constant" val="LightGray" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Helvetica Bold" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.075" valType="code"/>
        <Param name="name" updates="None" val="test_trigger" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Now you have found one of the&amp;#10;new secure machines. At random&amp;#10;intervals we will overstock it with a&amp;#10;different snack. You will be given an&amp;#10;opportunity to steal from the&amp;#10;machine when it is overstocked.&amp;#10;&amp;#10;However, to test your memory no&amp;#10;snacks will appear on the screen.&amp;#10;Remember what you have learned&amp;#10;and steal as many snacks as you&amp;#10;can.&amp;#10;&amp;#10;&amp;#10;        Press space to begin" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="trigger_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="trigger_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="instr"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'Onset': 0, 'CS': 'images/fix.png', 'Duration': 6}, {'Onset': 9, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 15, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 31, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 37, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 44, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 50, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 58, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 64, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 75, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 81, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 96, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 102, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 105, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 111, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 120, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 126, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 136, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 142, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 157, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 163, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 173, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 179, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 194, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 200, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 215, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 221, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 231, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 237, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 247, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 253, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 260, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 266, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 277, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 283, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 285, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 291, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 299, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 305, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 317, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 323, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 333, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 339, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 348, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 354, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 363, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 369, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 379, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 385, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 396, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 402, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 408, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 414, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 429, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 435, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 443, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 449, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 462, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 468, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 475, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 481, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 488, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 494, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 502, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 508, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 516, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 522, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 537, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 543, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 546, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 552, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 561, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 567, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 579, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 585, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 600, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 606, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 616, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 622, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 637, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 643, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 652, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 658, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 669, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 675, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 686, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 692, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 700, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 706, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 718, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 724, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 736, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 742, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 747, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 753, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 766, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 772, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 783, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 789, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 799, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 805, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 815, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 821, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 832, 'CS': 'images/yellow.png', 'Duration': 5}, {'Onset': 838, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 845, 'CS': 'images/red.png', 'Duration': 5}, {'Onset': 851, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 857, 'CS': 'images/green.png', 'Duration': 5}, {'Onset': 863, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 879, 'CS': 'images/blue.png', 'Duration': 5}, {'Onset': 885, 'CS': 'images/vend.png', 'Duration': 9}, {'Onset': 894, 'CS': 'images/yellow.png', 'Duration': 5}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Transfer_trials.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="test"/>
    <LoopTerminator name="trials"/>
    <Routine name="feedback"/>
  </Flow>
</PsychoPy2experiment>
